{"ast":null,"code":"import _classCallCheck from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n  return operate(function (source, subscriber) {\n    var groups = new Map();\n\n    var notify = function notify(cb) {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    var handleError = function handleError(err) {\n      return notify(function (consumer) {\n        return consumer.error(err);\n      });\n    };\n\n    var groupBySourceSubscriber = new GroupBySubscriber(subscriber, function (value) {\n      try {\n        var key = keySelector(value);\n        var group = groups.get(key);\n\n        if (!group) {\n          groups.set(key, group = subjectSelector ? subjectSelector() : new Subject());\n          var grouped = createGroupedObservable(key, group);\n          subscriber.next(grouped);\n\n          if (durationSelector) {\n            var durationSubscriber = new OperatorSubscriber(group, function () {\n              group.complete();\n              durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            }, undefined, undefined, function () {\n              return groups.delete(key);\n            });\n            groupBySourceSubscriber.add(durationSelector(grouped).subscribe(durationSubscriber));\n          }\n        }\n\n        group.next(elementSelector ? elementSelector(value) : value);\n      } catch (err) {\n        handleError(err);\n      }\n    }, function () {\n      return notify(function (consumer) {\n        return consumer.complete();\n      });\n    }, handleError, function () {\n      return groups.clear();\n    });\n    source.subscribe(groupBySourceSubscriber);\n\n    function createGroupedObservable(key, groupSubject) {\n      var result = new Observable(function (groupSubscriber) {\n        groupBySourceSubscriber.activeGroups++;\n        var innerSub = groupSubject.subscribe(groupSubscriber);\n        return function () {\n          innerSub.unsubscribe();\n          --groupBySourceSubscriber.activeGroups === 0 && groupBySourceSubscriber.teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\nvar GroupBySubscriber = /*#__PURE__*/function (_OperatorSubscriber) {\n  _inherits(GroupBySubscriber, _OperatorSubscriber);\n\n  var _super = _createSuper(GroupBySubscriber);\n\n  function GroupBySubscriber() {\n    var _this;\n\n    _classCallCheck(this, GroupBySubscriber);\n\n    _this = _super.apply(this, arguments);\n    _this.activeGroups = 0;\n    _this.teardownAttempted = false;\n    return _this;\n  }\n\n  _createClass(GroupBySubscriber, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.teardownAttempted = true;\n      this.activeGroups === 0 && _get(_getPrototypeOf(GroupBySubscriber.prototype), \"unsubscribe\", this).call(this);\n    }\n  }]);\n\n  return GroupBySubscriber;\n}(OperatorSubscriber); //# sourceMappingURL=groupBy.js.map","map":{"version":3,"sources":["/Users/philiptran/Desktop/RevatureTraining/Project2/shoppingcart-final/node_modules/rxjs/dist/esm/internal/operators/groupBy.js"],"names":["Observable","Subject","operate","OperatorSubscriber","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","source","subscriber","groups","Map","notify","cb","forEach","handleError","err","consumer","error","groupBySourceSubscriber","GroupBySubscriber","value","key","group","get","set","grouped","createGroupedObservable","next","durationSubscriber","complete","unsubscribe","undefined","delete","add","subscribe","clear","groupSubject","result","groupSubscriber","activeGroups","innerSub","teardownAttempted","arguments"],"mappings":"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","sourcesContent":["import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return operate((source, subscriber) => {\n        const groups = new Map();\n        const notify = (cb) => {\n            groups.forEach(cb);\n            cb(subscriber);\n        };\n        const handleError = (err) => notify((consumer) => consumer.error(err));\n        const groupBySourceSubscriber = new GroupBySubscriber(subscriber, (value) => {\n            try {\n                const key = keySelector(value);\n                let group = groups.get(key);\n                if (!group) {\n                    groups.set(key, (group = subjectSelector ? subjectSelector() : new Subject()));\n                    const grouped = createGroupedObservable(key, group);\n                    subscriber.next(grouped);\n                    if (durationSelector) {\n                        const durationSubscriber = new OperatorSubscriber(group, () => {\n                            group.complete();\n                            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n                        }, undefined, undefined, () => groups.delete(key));\n                        groupBySourceSubscriber.add(durationSelector(grouped).subscribe(durationSubscriber));\n                    }\n                }\n                group.next(elementSelector ? elementSelector(value) : value);\n            }\n            catch (err) {\n                handleError(err);\n            }\n        }, () => notify((consumer) => consumer.complete()), handleError, () => groups.clear());\n        source.subscribe(groupBySourceSubscriber);\n        function createGroupedObservable(key, groupSubject) {\n            const result = new Observable((groupSubscriber) => {\n                groupBySourceSubscriber.activeGroups++;\n                const innerSub = groupSubject.subscribe(groupSubscriber);\n                return () => {\n                    innerSub.unsubscribe();\n                    --groupBySourceSubscriber.activeGroups === 0 &&\n                        groupBySourceSubscriber.teardownAttempted &&\n                        groupBySourceSubscriber.unsubscribe();\n                };\n            });\n            result.key = key;\n            return result;\n        }\n    });\n}\nclass GroupBySubscriber extends OperatorSubscriber {\n    constructor() {\n        super(...arguments);\n        this.activeGroups = 0;\n        this.teardownAttempted = false;\n    }\n    unsubscribe() {\n        this.teardownAttempted = true;\n        this.activeGroups === 0 && super.unsubscribe();\n    }\n}\n//# sourceMappingURL=groupBy.js.map"]},"metadata":{},"sourceType":"module"}